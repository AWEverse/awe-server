
model GroupChat {
  chat_id    BigInt    @id @default(autoincrement())
  folder_id  BigInt
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  folder     ChatFolder @relation(fields: [folder_id], references: [folder_id], onDelete: Cascade)
  members    GroupMember[]
  messages   GroupMessage[]
  attachments GroupMessageAttachment[]

  @@index([folder_id])
}

model GroupMember {
  member_id  BigInt    @id @default(autoincrement())
  chat_id    BigInt
  user_id    BigInt
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  chat       GroupChat @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([chat_id])
  @@index([user_id])
}

model GroupMessage {
  msg_id        BigInt    @id @default(autoincrement())
  msg_reply_id  BigInt?
  chat_id       BigInt
  user_id       BigInt
  encrypted_body String    // Signal Protocol: Encrypted message content
  is_pinned     Boolean   @default(false) // Added for pinning
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  reply         GroupMessage? @relation("ReplyTo", fields: [msg_reply_id], references: [msg_id])
  replies       GroupMessage[] @relation("ReplyTo")
  chat          GroupChat @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  reactions     GroupMessageReaction[]
  attachments   GroupMessageAttachment[]

  @@index([chat_id])
  @@index([user_id])
  @@index([msg_reply_id])
  @@index([is_pinned, chat_id]) // Added for pinned message retrieval
  @@index([chat_id, created_at]) // Added for sorting efficiency
}

model GroupMessageReaction {
  reaction_id BigInt    @id @default(autoincrement())
  msg_id      BigInt
  user_id     BigInt
  emoji_id    BigInt
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  message     GroupMessage @relation(fields: [msg_id], references: [msg_id], onDelete: Cascade)
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  emoji       CustomEmoji @relation(fields: [emoji_id], references: [emoji_id], onDelete: Cascade)

  @@index([msg_id])
  @@index([user_id])
  @@index([emoji_id])
}

model GroupMessageAttachment {
  attach_id   BigInt        @id @default(autoincrement())
  msg_id      BigInt
  user_id     BigInt
  chat_id     BigInt
  gif_id      BigInt?
  attach_type AttachmentType
  attach_path String         // Path to encrypted attachment
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  message     GroupMessage @relation(fields: [msg_id], references: [msg_id], onDelete: Cascade)
  user        User         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat        GroupChat    @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)
  gif         Gif?         @relation(fields: [gif_id], references: [gif_id])

  @@index([msg_id])
  @@index([user_id])
  @@index([chat_id])
  @@index([gif_id])
}
