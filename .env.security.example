# Security Configuration Example for AWE Server
# Add these to your .env file for enhanced security

# =============================================================================
# JWT TOKEN SECURITY CONFIGURATION
# =============================================================================

# Access Token Lifetime (in minutes) - Shorter is more secure
# Default: 15 minutes
# Production recommendation: 5-15 minutes depending on risk tolerance
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=15

# Refresh Token Lifetime (in days) - Balance between security and UX
# Default: 30 days
# High-security environments: 7-14 days
# Standard environments: 30 days
JWT_REFRESH_TOKEN_LIFETIME_DAYS=30

# Session Lifetime (in hours)
# Default: 24 hours
# Production recommendation: 12-24 hours
SESSION_LIFETIME_HOURS=24

# JWT Secret Key (CRITICAL: Use strong, unique key in production)
# Generate with: openssl rand -base64 64
JWT_SECRET=your-super-secure-jwt-secret-key-here

# JWT Algorithm (recommended: RS256 for production, HS256 for development)
JWT_ALGORITHM=HS256

# =============================================================================
# SECURITY FEATURES CONFIGURATION
# =============================================================================

# Enable fingerprint validation for web clients
ENABLE_FINGERPRINT_VALIDATION=true

# Enable device tracking and validation
ENABLE_DEVICE_TRACKING=true

# Enable token reuse detection (Signal/Stripe pattern)
ENABLE_TOKEN_REUSE_DETECTION=true

# Enable dynamic token lifetimes based on device risk
ENABLE_RISK_BASED_TOKENS=true

# =============================================================================
# RATE LIMITING & LOCKOUT CONFIGURATION
# =============================================================================

# Maximum failed login attempts before account lockout
MAX_LOGIN_ATTEMPTS=5

# Account lockout duration (in minutes)
ACCOUNT_LOCKOUT_MINUTES=15

# Rate limit window (in minutes)
RATE_LIMIT_WINDOW_MINUTES=15

# =============================================================================
# DATABASE SECURITY CONFIGURATION
# =============================================================================

# Enable secure token storage (hash-only mode)
# Set to true after running migration to hash-only tokens
HASH_ONLY_TOKEN_STORAGE=false

# Auto-cleanup expired tokens interval (in hours)
TOKEN_CLEANUP_INTERVAL_HOURS=24

# =============================================================================
# AUDIT & MONITORING CONFIGURATION
# =============================================================================

# Enable security audit logging
ENABLE_SECURITY_AUDIT=true

# Log level for security events (error, warn, info, debug)
SECURITY_LOG_LEVEL=warn

# Enable detailed device fingerprinting
ENABLE_DETAILED_FINGERPRINTING=true

# =============================================================================
# FUTURE JWT SECURITY FEATURES
# =============================================================================

# JWT Key ID for signature rotation (not implemented yet)
# JWT_KEY_ID=key-2024-01

# JWT Issuer
# JWT_ISSUER=awe-platform

# JWT Audience
# JWT_AUDIENCE=awe-clients

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# 1. Token Security Migration Path:
#    - Deploy with current mixed storage (token + tokenHash)
#    - Run migration to validate all tokens have correct hashes
#    - Set HASH_ONLY_TOKEN_STORAGE=true
#    - Deploy update that removes plain token storage
#    - Update schema to make token field nullable

# 2. JWT Signature Rotation (Future):
#    - Implement RS256 with key rotation
#    - Use JWT 'kid' header for key identification
#    - Maintain multiple valid keys during rotation

# 3. Device Risk Assessment (Future):
#    - Implement ML-based device risk scoring
#    - Dynamic token lifetimes based on risk
#    - Progressive authentication for high-risk scenarios

# 4. Enhanced Fingerprinting (Future):
#    - Canvas fingerprinting for web clients
#    - Audio context fingerprinting
#    - Hardware-specific identifiers for mobile apps
